{
  "trigger": [
    "master"
  ],
  "jobs": [
    {
      "job": "myJob",
      "timeoutInMinutes": 1000,
      "variables": [
        {
          "template": "var-dev.yml"
        }
      ],
      "pool": {
        "vmImage": "ubuntu latest"
      },
      "steps": [
        {
          "task": "AzureCLI@2",
          "displayName": "Install AML CLI",
          "inputs": {
            "azureSubscription": "${{ variables.ml_ws_connection }}",
            "scriptLocation": "inlineScript",
            "scriptType": "bash",
            "inlineScript": "az extension add -n azure-cli-ml"
          }
        },
        {
          "task": "AzureCLI@2",
          "displayName": "Attach folder to workspace",
          "inputs": {
            "azureSubscription": "${{ variables.ml_ws_connection }}",
            "workingDirectory": "${{ variables.ml_path }}",
            "scriptLocation": "inlineScript",
            "scriptType": "bash",
            "inlineScript": "az ml folder attach -w ${{ variables.ml_ws }} -g ${{ variables.ml_rg }}"
          }
        },
        {
          "task": "AzureCLI@2",
          "displayName": "Create compute for training",
          "inputs": {
            "azureSubscription": "${{ variables.ml_ws_connection }}",
            "workingDirectory": "${{ variables.ml_path }}",
            "scriptLocation": "inlineScript",
            "scriptType": "bash",
            "inlineScript": "az ml computetarget create amlcompute -n ${{ variables.ml_ct }} --vm-size STANDARD_D2_V2 --max-nodes 1"
          }
        },
        {
          "task": "AzureCLI@2",
          "retryCountOnTaskFailure": 5,
          "timeoutInMinutes": 1000,
          "displayName": "Train model",
          "inputs": {
            "azureSubscription": "${{ variables.ml_ws_connection }}",
            "workingDirectory": "${{ variables.ml_path }}",
            "scriptLocation": "inlineScript",
            "scriptType": "bash",
            "inlineScript": "az ml run submit-script -c config/train --ct ${{ variables.ml_ct }} -e ${{ variables.ml_exp }} -t run.json train.py"
          }
        },
        {
          "task": "AzureCLI@2",
          "displayName": "Register model",
          "inputs": {
            "azureSubscription": "${{ variables.ml_ws_connection }}",
            "workingDirectory": "${{ variables.ml_path  }}",
            "scriptLocation": "inlineScript",
            "scriptType": "bash",
            "inlineScript": "az ml model register -n ${{ variables.ml_model_name }} -f run.json --asset-path outputs/ridge_0.95.pkl -t model.json"
          }
        },
        {
          "task": "AzureCLI@2",
          "timeoutInMinutes": 1000,
          "displayName": "Deploy model to AKS for Production",
          "inputs": {
            "azureSubscription": "${{ variables.ml_ws_connection }}",
            "workingDirectory": "${{ variables.ml_path }}",
            "scriptLocation": "inlineScript",
            "scriptType": "bash",
            "inlineScript": "az ml model deploy --name diabetes-preprod-aks --ct ${{ variables.ml_aks_name }} -m Model_diabetes:2 --ic config/inference-config.yml --dc config/deployment-config-aks.yml  --overwrite"
          }
        },
        {
          "task": "CopyFiles@2",
          "inputs": {
            "SourceFolder": "$(agent.builddirectory)",
            "Contents": "**",
            "TargetFolder": "$(Build.ArtifactStagingDirectory)",
            "CleanTargetFolder": true,
            "OverWrite": true,
            "flattenFolders": true,
            "preserveTimestamp": true,
            "retryCount": "3",
            "ignoreMakeDirErrors": true
          }
        },
        {
          "task": "PublishBuildArtifacts@1",
          "inputs": {
            "PathtoPublish": "$(Build.ArtifactStagingDirectory)",
            "ArtifactName": "diabetes-drop",
            "publishLocation": "Container"
          }
        },
        {
          "task": "DownloadBuildArtifacts@0",
          "inputs": {
            "buildType": "current",
            "downloadType": "specific",
            "artifactName": "diabetes-drop",
            "downloadPath": "$(System.ArtifactsDirectory)"
          }
        },
        {
          "task": "PublishBuildArtifacts@1",
          "inputs": {
            "PathtoPublish": "$(Build.ArtifactStagingDirectory)",
            "ArtifactName": "diabetes-drop",
            "publishLocation": "Container"
          }
        }
      ]
    }
  ]
}